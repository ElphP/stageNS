// Modele demande: ajout
 // v3 2024: 
        'montant_accorde',
        'crit_refus'





// création d'un fichier de migration pour ajouter 2 colonnes dans la table demande: add_email_variables_to_demandes

          <?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::table('demandes', function (Blueprint $table) {
            $table->decimal('montant_accorde',10,2)->nullable();
            $table->string('crit_refus', 200)->nullable();
        });
    }
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::table('demandes', function (Blueprint $table) {
            //
        });
    }
};


//Modification des templates EMail en remplaçant les données par ###MONTANT_ACCORDE### (statut1) et ###CRIT_REFUS### (statut 5)




//Création de 2 variables d'ENV qui permettent de changer facilement les critères de refus :
# criteres de refus modifiables
TAB_AFFICH_SELECT="{'lic':'License',
 'conv':'Convention Collective',
  'ca':'Chiffre d###affaire',
   'date':'Date de création',
    'nbr_repr':'Nombre de représentations',
    'nbr_rod':'Nombre de rodages nécessaires',
    'auteur':'Auteur contemporain',
    'rem_min':'Rémunération minimum',
    'bdgt':'Budget équilibré'
    }"
TAB_MESSAGE_MAIL="{'lic':'- License',
            'conv':'- Convention collective',
            'ca':'- Ne pas avoir réalisé un chiffre d###affaires supérieur à 100 000€ sur l###année 2023 ',
            'date':'- Les structures doivent avoir été créées après le 1er janvier 2014',
            'nbr_repr':'- Nombre de représentations',
            'nbr_rod':'- Le spectacle doit être une création pour Avignon avec une tolérance de 12 représentations de rodage ',
            'auteur':'- Les auteur-rice-s, compositeur-rice-s, ou chorégraphe-s doivent être contemporain-e-s : vivant-e-s ou mort-e-s depuis moins de 5 ans (les montages de textes et adaptations ne sont pas éligibles)',
            'rem_min':'- Verser à chaque artiste au plateau une rémunération au moins égale à 124,50€ brut en cas de rémunération au cachet et 2614,50€ brut en cas de rémunération mensualisée',
            'bdgt':'- Budget équilibré'
            }"



// Changements dans demande_modifications
   
    //Changement dans demande_modification "Notes" devient "Autres"
         <li class="nav-item">
            <a class="nav-link" href="#notes" role="tab" data-toggle="tab">Autres</a>
        </li>


  //Ajout des 2 fieldset en dessous de celui de "notes"
                 


                 <fieldset class=" block-content">
                    <legend>Aide accordée :</legend>
                    <div class="mb-3 " style="width:280px">
                        <input type="number" class="form-control" name="montant_accorde" id="montant_accorde"
                            placeholder="Montant" value="{{ $record->montant_accorde}}"  />
                    </div>
                </fieldset>

                <fieldset class=" block-content">
                    <legend>Critère de refus :</legend>
                     <div class="mb-3 "  style="width:280px">
                        {{-- transformation de la variable ENV en tableau utilisable --}}
                        @php 
                        $tab_affich_select = str_replace("'", '"',env('TAB_AFFICH_SELECT'));
                        $tab_affich_select = str_replace("###", "'",$tab_affich_select);
                        
                        $tab_affich_select = json_decode( $tab_affich_select ,true); 
                        @endphp

                        <select type="text" class="form-control" name="crit_refus" id="crit_refus">
                            
                            <option value="" @if ($record->crit_refus=="" ) selected @endif>--Choix--</option>
                           
                            @foreach ($tab_affich_select as $key=>$value)
                                <option value={{$key}} @if ($record->crit_refus== $key) selected @endif>{{$value}}</option>
                            @endforeach
                        </select>
                        
                    </div>
                </fieldset>

//  traitement des mails en intégrant les variables dans demande_controller
       //changement  de "use \DB;" en "use Illuminate\Support\Facades\DB;"

      //Ajout de 2 lignes dans modificationsave (en dessous  de ce qui concerne les notes)

            $record->notes = $request->notes;
            $record->montant_accorde = $request->montant_accorde;
            $record->crit_refus = $request->crit_refus;

        //Changements dans modification_satutsave (statuts 1 et 5)

           public function  modification_statutsave(Request $request)
    {
       
        $id = $request->id_demande;
        $record =  Demande::where('id', $id)->first();
        $record->statut = $request->statut;
        $record->save();
        
        $template = DB::table('email_templates')->where('statut', (int)($request->statut))->first();
     
        $html = 'Votre dossier a bien été reçu. Il est actuellement en cours d’instruction en vue de la commission d’attribution. 
<br><br>
Vous serez informé.e de sa décision finale par mail courant juin. Nous vous prions de bien vouloir patienter jusqu\'à cette notification et nous restons bien entendu à votre disposition pour toute question d\'ordre général.
Nous vous remercions de votre confiance et nous espérons pouvoir apporter une réponse favorable à votre demande.
<br><br>
        Bien à vous,
        <br>
        L’équipe d’Avignon Festival & Compagnies
        ';

        if ($request->statut == 1) {
            
            $message = nl2br($template->body);
            $message = str_replace('###MONTANT_ACCORDE###', $record->montant_accorde, $message);            
            $this->envoyerEmail($record->email, $message, $template->subject);
            //  $this->envoyerEmail($record->email,'Votre demande a été accordée','Demande accordée');
            // $this->envoyerEmail($record->email, nl2br($template->body), $template->subject);
            //if demande accordée then in record of demande , field onglets must be updated to budget_reel
            $record->onglets = 'btn_tab_budget_reel';
            $record->save();
            
        }
        if ($request->statut == 3) {
            // $this->envoyerEmail($record->email,$html,'Fonds de soutien à l’émergence et à la création du festival Off 2023 - Dossier envoyé ');
            $this->envoyerEmail($record->email, nl2br($template->body), $template->subject);
        }
        if ($request->statut == 4) {
            //    $this->envoyerEmail($record->email,'Votre demande a été refusée','Demande refusée');
            $this->envoyerEmail($record->email, nl2br($template->body), $template->subject);
        }

        if ($request->statut == 5 && $record->crit_refus!='') {
            $tab_crit_refus = str_replace("'", '"',env('TAB_MESSAGE_MAIL'));
            $tab_crit_refus = str_replace("###", "'",$tab_crit_refus);
            
            $tab_crit_refus = json_decode( $tab_crit_refus ,true); 
    
            $message = nl2br($template->body);
            foreach($tab_crit_refus as $key=>$value)  {
                if($key==$record->crit_refus)  {
                    $message = str_replace('###CRIT_REFUS###', $value, $message);
                    break;
                }
            }
           
            $this->envoyerEmail($record->email, $message, $template->subject);
            //$this->envoyerEmail($record->email,'Votre demande n\'est pas éligible','Demande non éligible');
            // $this->envoyerEmail($record->email, nl2br($template->body), $template->subject);
            
        }

        if ($request->statut == 6) {
            //     $this->envoyerEmail($record->email,'Votre demande a été envoyée à la commission 2','Demande envoyée commission 2');
            $this->envoyerEmail($record->email, nl2br($template->body), $template->subject);
        }
    }

  
